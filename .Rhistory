ls
add2 <-function(x,y){
x+y
}
add2(3,5)
above <- function(x,n){
use <- x > n
x[use]
}
x <- 1:20
above(x,20)
above(x,10)
columnmean <-  function(y){
nc <- ncol(y)
means <- numeric(nc)
for (i in 1:nc){
means[i] <- mean(y[,i])
}
means
}
which(c(TRUE,FALSE,TRUE))
mean(c(2,4,5))
x<-c(2,4,5)
median(x)
l = 11.1
floor(l)
evaluate <- function(func, dat){
dat <- c(2,4,6)
func <- sum(dat)
func
}
func
evaluate
dat <- c(2,4,6)
sum(dat)
somma <- function(dat){
sum(dat)
# sum
}
mediana <- function(dat){
median(dat)
# med
}
fl <- function(dat){
floor(data)
# flo
}
evaluate <- function(func, dat){
func(c(2,4,6)) # Write your code here!
}
evaluate(somma)
evaluate(mediana)
evaluate(fl)
somma <- function(dat){
sum(dat)
# sum
}
mediana <- function(dat){
median(dat)
# med
}
fl <- function(dat){
floor(dat)
# flo
}
evaluate <- function(func, dat){
func(c(2,4,6)) # Write your code here!
}
evaluate(fl)
sum <- function(dat){
sum(dat)
# sum
}
median <- function(dat){
median(dat)
# med
}
floor <- function(dat){
floor(dat)
# flo
}
evaluate <- function(func, dat){
func(c(2,4,6)) # Write your code here!
}
evaluate(sum)
evaluate <- function(func, dat){
func(c(2,4,6)) # Write your code here!
sum(dat)
}
evaluate()
evaluate
evaluate <- function(func, dat){
func(sum,c(2,4,6)) # Write your code here!
}
evaluate
somma <- function(dat){
sum(dat)
# sum
}
mediana <- function(dat){
median(dat)
# med
}
fl <- function(dat){
floor(dat)
# flo
}
evaluate <- function(func, dat){
func(c(2,4,6)) # Write your code here!
}
evaluate(somma)
evaluate(somma)
make_sum < function(dat){
sum(dat)
}
evaluate <- function(func, dat){
dat <- c(2,4,6) # Write your code here!
}
evaluate(sum)
evaluate(make_sum)
make_sum < function(dat){
sum(dat)
}
make_sum <- function(dat){
sum(dat)
}
evaluate <- function(func, dat){
dat <- c(2,4,6) # Write your code here!
}
evaluate(make_sum)
add_two_numbers <- function(num1, num2){
num1 + num2
}
multiply_two_numbers <- function(num1, num2){
num1 * num2
}
some_function <- function(func){
func(2, 4)
}
some_function(add_two_numbers)
evaluate(sum)
evaluate(make_sum)
evaluate(somma)
somma <- function(dat){
sum(dat)
#sum
}
evaluate <- function(func, dat){
func(c(2,4,6)) # Write your code here!
}
evaluate(somma)
dat <- c(2,4,6)
somma
somma(dat)
somma <- function(dat){
sum(dat)
#sum
}
somma(dat =)
somma(dat)
sum(dat)
dat <- c(2,4,6)
sum(dat )
:q
q
q()
make_sum <- function(dat){
sum(dat)
#sum
}
evaluate <- function(func, dat){
func(c(2,4,6)) # Write your code here!
}
evaluate(make_sum,c(2,4,6))
evaluate(make_sum)
evaluate <- function(func, dat){
func(c(2,4,6)) # Write your code here!
make_sum <- function(dat){
sum(dat)
#sum
}
evaluate <- function(func, dat){
func(c(2,4,6)) # Write your code here!
make_sum <- function(dat){
sum(dat)
#sum
}
}
}
evaluate(make_sum)
evaluate <- function(func, dat){
make_sum <- sum(dat) # Write your code here!
make_median<- median(dat)
make_fl <- floor(dat)
}
evaluate(make_sum, c(2,4,6))
evaluate <- function(func, dat){
sum(dat) # Write your code here!
median(dat)
floor(dat)
}
evaluate(sum,c(2,4,6))
evaluate <- function(func, dat){
func(dat) # Write your code here!
}
evaluate(sum,c(2,4,6))
evaluate(median,c(2,4,6))
evaluate(median,c(2,4,6))
evaluate <- function(func, dat){
func(dat) # Write your code here!
}
evaluate(median, c(7, 40, 9))
evaluate(floor, 11.1)
?sum
sum
median()
median
sum
source(sum)
evaluate(sum,c(2,4,6))
evaluate(NULL,c(2,4,6))
source('~/Documents/Lavoro/COURSERA/Rprogramming/functions.R')
evaluate <- function(func, dat){
if (is.null(func)){
func(dat)
} else {
NULL
}
}
evaluate(NULL,c(2,4,6))
evaluate(sum,c(2,4,6))
evaluate <- function(func, dat){
if (is.null(func)){
NULL
} else {
func(dat)
}
}
evaluate(sum,c(2,4,6))
evaluate(NULL,c(2,4,6))
evaluate <- function(func, dat){
if(!is.null(func) && is.function(func) && !is.null(dat)){
func(dat)
} else {
NULL
}
# func(dat)  # Write your code here!
# Remember: the last expression evaluated will be returned!
}
evaluate(NULL,c(2,4,6))
evaluate(sum,c(2,4,6))
evaluate(floor, 1.1)
test_func4 <- function() {
try({
func <- get('evaluate', globalenv())
t1 <- identical(func(sum, c(2, 4, 7)), 13)
t2 <- identical(func(median, c(9, 200, 100)), 100)
t3 <- identical(func(floor, 12.1), 12)
ok <- all(t1, t2, t3)
}, silent = TRUE)
exists('ok') && isTRUE(ok)
}
test_func4
test_func4()
source('~/Documents/Lavoro/COURSERA/Rprogramming/functions.R')
